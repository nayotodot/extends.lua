package = "extends"
version = "dev-1"
source = {
	url = "git+https://github.com/nayotodot/extends.lua.git"
}
description = {
	homepage = "https://github.com/nayotodot/extends.lua",
	license = "MIT License"
}
dependencies = {
	"lua >= 5.1, < 5.5"
}
build = {
	type = "builtin",
	modules = {
		["extends"]                  = "src/extends.lua",
		["extends.base"]             = "src/extends/base.lua",
		["extends.base.approach"]    = "src/extends/base/approach.lua",
		["extends.base.deepcopy"]    = "src/extends/base/deepcopy.lua",
		["extends.base.iif"]         = "src/extends/base/iif.lua",
		["extends.base.isboolean"]   = "src/extends/base/isboolean.lua",
		["extends.base.isfunction"]  = "src/extends/base/isfunction.lua",
		["extends.base.isnil"]       = "src/extends/base/isnil.lua",
		["extends.base.isnumber"]    = "src/extends/base/isnumber.lua",
		["extends.base.isstring"]    = "src/extends/base/isstring.lua",
		["extends.base.istable"]     = "src/extends/base/istable.lua",
		["extends.base.isthread"]    = "src/extends/base/isthread.lua",
		["extends.base.isuserdata"]  = "src/extends/base/isuserdata.lua",
		["extends.base.ivalues"]     = "src/extends/base/ivalues.lua",
		["extends.base.lerp"]        = "src/extends/base/lerp.lua",
		["extends.base.scale"]       = "src/extends/base/scale.lua",
		["extends.base.shallowcopy"] = "src/extends/base/shallowcopy.lua",
		["extends.base.values"]      = "src/extends/base/values.lua",
		["extends.math"]             = "src/extends/math.lua",
		["extends.math.angle"]       = "src/extends/math/angle.lua",
		["extends.math.clamp"]       = "src/extends/math/clamp.lua",
		["extends.math.distance"]    = "src/extends/math/distance.lua",
		["extends.math.frac"]        = "src/extends/math/frac.lua",
		["extends.math.hypot"]       = "src/extends/math/hypot.lua",
		["extends.math.mod"]         = "src/extends/math/mod.lua",
		["extends.math.normalize"]   = "src/extends/math/normalize.lua",
		["extends.math.prandom"]     = "src/extends/math/prandom.lua",
		["extends.math.round"]       = "src/extends/math/round.lua",
		["extends.math.rsign"]       = "src/extends/math/rsign.lua",
		["extends.math.sign"]        = "src/extends/math/sign.lua",
		["extends.math.smoothstep"]  = "src/extends/math/smoothstep.lua",
		["extends.math.trunc"]       = "src/extends/math/trunc.lua",
		["extends.string"]           = "src/extends/string.lua",
		["extends.string.rfind"]     = "src/extends/string/rfind.lua",
		["extends.string.split"]     = "src/extends/string/split.lua",
		["extends.table"]            = "src/extends/table.lua",
		["extends.table.each"]       = "src/extends/table/each.lua",
		["extends.table.eachi"]      = "src/extends/table/eachi.lua",
		["extends.table.empty"]      = "src/extends/table/empty.lua",
		["extends.table.filter"]     = "src/extends/table/filter.lua",
		["extends.table.haskey"]     = "src/extends/table/haskey.lua",
		["extends.table.hasvalue"]   = "src/extends/table/hasvalue.lua",
		["extends.table.keys"]       = "src/extends/table/keys.lua",
		["extends.table.map"]        = "src/extends/table/map.lua",
		["extends.table.max"]        = "src/extends/table/max.lua",
		["extends.table.merge"]      = "src/extends/table/merge.lua",
		["extends.table.min"]        = "src/extends/table/min.lua",
		["extends.table.pluck"]      = "src/extends/table/pluck.lua",
		["extends.table.push"]       = "src/extends/table/push.lua",
		["extends.table.reduce"]     = "src/extends/table/reduce.lua",
		["extends.table.reject"]     = "src/extends/table/reject.lua",
		["extends.table.reverse"]    = "src/extends/table/reverse.lua",
		["extends.table.shuffle"]    = "src/extends/table/shuffle.lua",
		["extends.table.values"]     = "src/extends/table/values.lua"
	}
}
